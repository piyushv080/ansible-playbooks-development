---
# tasks file for vpc-role
 - name: create VPC
   ec2_vpc_net:
     name: "{{ vpc_name }}"
     cidr_block: "{{ vpc_cidr }}"
     region: "{{ region }}"
     state: present
     aws_access_key: "{{ aws_access_key }}"
     aws_secret_key: "{{ aws_secret_key }}"
   register: vpc

 - name: Set VPC ID in variable
   set_fact:
     vpc_id: "{{ vpc.vpc.id }}"

 - name: associate subnet to the VPC
   ec2_vpc_subnet:
    state: present
    vpc_id : "{{ vpc_id }}"
    region: "{{ region }}"
    cidr: "{{ subnet_cidr }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    map_public: yes
    resource_tags:
      name: "{{ subnet_name}}"
   register: subnet
 
 - name: Debug igw_name variable
   debug:
     var: igw_name

 - name: create IGW
   ec2_vpc_igw:
    vpc_id: "{{ vpc_id}}"
    region: "{{ region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    state: "present"
    tags:
      Name: "{{ igw_name }}"
   register: igw
 
 - name: Route IGW
   ec2_vpc_route_table:
     vpc_id: "{{ vpc_id }}"
     region: "{{ region }}"
     aws_access_key: "{{ aws_access_key }}"
     aws_secret_key: "{{ aws_secret_key }}"
     subnets:
       - "{{ subnet.subnet.id }}"
     routes:
       - dest: 0.0.0.0/0
         gateway_id: "{{ igw.gateway_id }}"
     tags:
       Name: "{{ route_name }}"

 - name: Create Security Group
   ec2_group:
     name: Web DMZ
     description: DMZ Security Group
     vpc_id: "{{ vpc_id }}"
     region: "{{ region }}"
     aws_access_key: "{{ aws_access_key }}"
     aws_secret_key: "{{ aws_secret_key }}"
     rules:
       - proto: tcp
         ports:
           - 80
         cidr_ip: 0.0.0.0/0
       - proto: tcp
         ports:
           - 22
         cidr_ip: 0.0.0.0/0
   register: security_group

 - name: create a new ec2 key pair, return generate private key
   ec2_key:
     aws_access_key: "{{ aws_access_key }}"
     aws_secret_key: "{{ aws_secret_key }}"
     name: aws_devops
     region: "{{ region }}"
   register: keypair
   tags:
     - production-key

 - name: Copy EC2 Key Pair private key locally
   copy:
     content: "{{ keypair.key.private_key }}"
     dest: "{{ ec2_key_directory }}production.pem"
   when: keypair.changed == true
   tags:
     - production-key

 - name: Create EC2 Instance
   ec2:
     image: ami-0ded8326293d3201b
     wait: yes
     instance_type: t2.micro
     region: "{{ region }}"
     group_id: "{{ security_group.group.id }}"
     vpc_subnet_id: "{{ subnet.subnet.id }}"
     key_name: "{{ keypair.key.name }}"
     instance_tags:
       Name: Production
     aws_access_key: "{{ aws_access_key }}"
     aws_secret_key: "{{ aws_secret_key }}"
 





































